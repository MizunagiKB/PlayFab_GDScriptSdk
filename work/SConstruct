import sys
import os
import subprocess
import pathlib
import json


REPOS_SDK_GEN = "https://github.com/PlayFab/SDKGenerator"
REPOS_SDK_TPL = "https://github.com/MizunagiKB/PlayFab_GDScriptTemplate"
REPOS_SDK_API = "https://github.com/PlayFab/API_Specs"
REPOS_SDK_API_JSON = "SdkManualNotes.json"

EnsureSConsVersion(4, 0)

env = Environment()

# env.Program(target='hello', source=["hello.c"])


def pre_build(env):

    work_dir = pathlib.Path("SDKGenerator")
    if work_dir.exists():
        os.chdir("SDKGenerator")
        subprocess.check_output(["git", "pull", REPOS_SDK_GEN])
        os.chdir("..")
    else:
        subprocess.check_output(["git", "clone", REPOS_SDK_GEN])

    os.chdir("SDKGenerator/privateTemplates")
    work_dir = pathlib.Path("gdscriptsdk")
    if work_dir.exists():
        os.chdir("gdscriptsdk")
        subprocess.check_output(["git", "pull", REPOS_SDK_TPL])
        os.chdir("..")
    else:
        subprocess.check_output(["git", "clone", REPOS_SDK_TPL, "gdscriptsdk"])
    os.chdir("../..")

    work_dir = pathlib.Path("API_Specs")
    if work_dir.exists():
        os.chdir("API_Specs")
        subprocess.check_output(["git", "restore", REPOS_SDK_API_JSON])
        subprocess.check_output(["git", "pull", REPOS_SDK_API])
        os.chdir("..")
    else:
        subprocess.check_output(["git", "clone", REPOS_SDK_API])

    os.chdir("SDKGenerator")
    if sys.platform == "win32":
        subprocess.check_output(["SDKBuildScripts/initejs.bat"])
    else:
        subprocess.check_output(["sh", "SDKBuildScripts/initejs.sh"])
    os.chdir("..")

    #
    work_dir = pathlib.Path("API_Specs")
    if work_dir.exists():
        os.chdir("API_Specs")
        with open(REPOS_SDK_API_JSON, "r") as rf:
            dict_notes = json.load(rf)
            dict_notes["sdkVersion"]["gdscriptsdk"] = dict_notes["sdkVersion"]["pythonsdk"]

        with open(REPOS_SDK_API_JSON, "w") as wf:
            dict_notes = json.dump(dict_notes, wf)
        os.chdir("..")


def run_build(env):


    work_dir = pathlib.Path("SDKGenerator")
    if work_dir.exists():
        os.chdir("SDKGenerator")
        subprocess.check_output(
            [
                "node",
                "generate.js",
                "gdscriptsdk=../../proj",
                "-apiSpecPath",
                "../API_Specs",
            ]
        )
        os.chdir("..")


def epi_build(env):
    pass


pre_build(env)
run_build(env)
epi_build(env)

